// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package pmodel

import "github.com/QuantumShiftX/golib/stores/gormx"

const TableNameTag = "tags"

// Tag mapped from table <tags>
type Tag struct {
	ID            int64  `gorm:"column:id;primaryKey;autoIncrement:true;comment:自增主键，唯一标识每个标签" json:"id"`               // 自增主键，唯一标识每个标签
	TagName       string `gorm:"column:tag_name;not null;comment:标签名称，用于标识标签的含义" json:"tag_name"`                       // 标签名称，用于标识标签的含义
	TagColor      string `gorm:"column:tag_color;comment:标签颜色，用于前端显示（可选字段）" json:"tag_color"`                           // 标签颜色，用于前端显示（可选字段）
	FollowerCount int64  `gorm:"column:follower_count;not null;comment:标签被打的总人数，用于统计标签的使用情况" json:"follower_count"`     // 标签被打的总人数，用于统计标签的使用情况
	IsSystem      int8  `gorm:"column:is_system;not null;default:1;comment:是否为系统标签（1：系统标签，2：自定义标签）" json:"is_system"`  // 是否为系统标签（1：系统标签，2：自定义标签）
	IsEnabled     int8  `gorm:"column:is_enabled;not null;default:1;comment:是否启用该标签（1 = 启用，2 = 禁用）" json:"is_enabled"` // 是否启用该标签（1 = 启用，2 = 禁用）
	Sort          int64  `gorm:"column:sort;comment:标签的排序号，用于展示时的排序" json:"sort"`                                       // 标签的排序号，用于展示时的排序
	//
	gormx.OperationBaseModel
	gormx.Model
}

// TableName Tag's table name
func (*Tag) TableName() string {
	return TableNameTag
}
